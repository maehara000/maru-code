// common.scssについて：
// 細かい共通パーツをまとめている。最終的には「style.css」の最上部に出力。

/* ============
* common parts start
============ */
html {
  font-size: 10px;
}


@media screen and (min-width:501px) and ( max-width:1100px) {
  /* PC small window */
  html {
    font-size: 10px;
  }
} /* PC small window */



@media screen and (max-width: 500px) {
  /* sp only */
  html {
    font-size: 1.8vw;
  }
} /* sp only */



.container {
  margin-left: auto;
  margin-right: auto;
  width: calc(100% - 40px);
  max-width: $mainWidth;
}

@media screen and (max-width: 500px) {
  /* sp only */
  .container {
    width: 100%;
  }
} /* sp only */


.d-b {
  display: block;
}

.d-ib {
  display: inline-block;
}

.d-i {
  display: inline;
}

.m0 {
  margin-top: 0;
  margin-bottom: 0;
}

.mb0 {
  margin-bottom: 0;
}

.mt0 {
  margin-top: 0;
}

.bold {
  font-weight: bold;
}




img {
  image-rendering: auto;
}


.p-r {
  position: relative;
}

.d-b {
  display: block;
}

.d-ib {
  display: inline-block;
}

.d-i {
  display: inline;
}

.m0 {
  margin-top: 0;
  margin-bottom: 0;
}

.mb0 {
  margin-bottom: 0;
}

.mt0 {
  margin-top: 0;
}

.bold {
  font-weight: bold;
}




.button-wrap {
  max-width: 600px;
  width: calc(100% - 40px);
  margin: 0 auto;
  
  .button_note {
    font-size: 1.4rem;
    margin-top: 0.6rem;
  }
}


.basic-button {
  
}


@media screen and (min-width: 768px) {
  /* pc only */
  .basic-button {
    transition: color 0.3s 0s, background-color 0.3s 0s;

    &:hover {
      background-color: #fff;
      color: #ddd;
      
      &::before {
        opacity: 0;
      }

      &:after {
        opacity: 1;
      }
    }
  }
} /* pc only */



@media screen and (max-width: 767px) {
  /* sp only */
  .basic-button {
  }
} /* sp only */



/* レスポンシブ用表示切り分け */
@media screen and (min-width: 768px) {
  /* pc only */
  .sp { /* SPのみ表示する */
    display: none !important;
  }
} /* pc only */

@media screen and (max-width: 767px) {
  /* sp only */
  .pc { /* PCのみ表示する */
    display: none !important;
  }
} /* sp only */

@media screen and (max-width: 1000px) {
  /* pc big-window only */
  .pc-big { /* PCの、大きいウィンドウのみ表示する */
    display: none !important;
  }
} /* pc big-window only */










/* ==================
* アニメーション(.js-dp系)
* ================== */
/* アニメーション */
.fade-dp {
  $fadeDpCommonTransition: 1.0;
  opacity: 0;
  transform: translate(0px, 40px);
  transition: transform $fadeDpCommonTransition+s 0s, opacity $fadeDpCommonTransition+s 0s;
  
  &.-display {
    opacity: 1;
    transform: translate(0px, 0px);
  }
}

.fade-dp_fade { // フェードのみ
  $fadeDpCommonTransition: 1.0;
  opacity: 0;
  transition: transform $fadeDpCommonTransition+s 0s, opacity $fadeDpCommonTransition+s 0s;
  
  &.-display {
    opacity: 1;
  }
}


.fade-dp_x_l { // 左から x軸 left
  $fadeDpCommonTransition: 1.0;
  opacity: 0;
  transform: translate(-40px, 0px);
  transition: transform $fadeDpCommonTransition+s 0s, opacity $fadeDpCommonTransition+s 0s;
  
  &.-display {
    opacity: 1;
    transform: translate(0px, 0px);
  }
}

.fade-dp_x_l_up { // 左下から x軸 left
  $fadeDpCommonTransition: 1.0;
  opacity: 0;
  transform: translate(-40px, 40px);
  transition: transform $fadeDpCommonTransition+s 0s, opacity $fadeDpCommonTransition+s 0s;
  
  &.-display {
    opacity: 1;
    transform: translate(0px, 0px);
  }
}


.fade-dp_x_r { // 右から x軸 right
  $fadeDpCommonTransition: 1.0;
  opacity: 0;
  transform: translate(40px, 0px);
  transition: transform $fadeDpCommonTransition+s 0s, opacity $fadeDpCommonTransition+s 0s;
  
  &.-display {
    opacity: 1;
    transform: translate(0px, 0px);
  }
}

.fade-dp_x_r_up { // 右下から x軸 right
  $fadeDpCommonTransition: 1.0;
  opacity: 0;
  transform: translate(40px, 40px);
  transition: transform $fadeDpCommonTransition+s 0s, opacity $fadeDpCommonTransition+s 0s;
  
  &.-display {
    opacity: 1;
    transform: translate(0px, 0px);
  }
}


.full-dp {
  position: relative;
  
  &:before,
  &:after {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    background-color: #FFF;
    position: absolute;
    right: 0;
    top: 0;
    transition: width 1.2s 0s cubic-bezier(0.5, 0.57, 0, 0.93);
  }

  &:before {
    background-color: rgb(255 255 255 / 100%);
    z-index: 1;
  }

  &:after {
    opacity: 0.7;
    background-color: rgb(255 255 255 / 100%);
    transition: width 1.2s 0.4s cubic-bezier(0.5, 0.57, 0, 0.93);
  }

  &.-right {
    &:before,
    &:after {
      left: 0;
      right: auto;
    }
  }
  
  &.-display {
    &:before,
    &:after {
      width: 0;
    }
  }
}



@media screen and (max-width: 767px) {
  /* sp only */
  .sp-fade-dp {
    $fadeDpCommonTransition: 1.0;
    opacity: 0;
    transform: translate(0px, 40px);
    transition: transform $fadeDpCommonTransition+s 0s, opacity $fadeDpCommonTransition+s 0s;
    
    &.-display {
      opacity: 1;
      transform: translate(0px, 0px);
    }
  }
} /* sp only */

/* end アニメーション(.js-dp系) */


/* common parts end */